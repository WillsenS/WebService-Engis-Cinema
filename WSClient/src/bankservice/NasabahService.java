
package bankservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NasabahService", targetNamespace = "http://BankService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NasabahService {


    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isNoRekValid", targetNamespace = "http://BankService/", className = "bankservice.IsNoRekValid")
    @ResponseWrapper(localName = "isNoRekValidResponse", targetNamespace = "http://BankService/", className = "bankservice.IsNoRekValidResponse")
    @Action(input = "http://BankService/NasabahService/isNoRekValidRequest", output = "http://BankService/NasabahService/isNoRekValidResponse")
    public boolean isNoRekValid(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isTransactionExist", targetNamespace = "http://BankService/", className = "bankservice.IsTransactionExist")
    @ResponseWrapper(localName = "isTransactionExistResponse", targetNamespace = "http://BankService/", className = "bankservice.IsTransactionExistResponse")
    @Action(input = "http://BankService/NasabahService/isTransactionExistRequest", output = "http://BankService/NasabahService/isTransactionExistResponse")
    public boolean isTransactionExist(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        long arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg0
     * @return
     *     returns bankservice.Nasabah
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNasabahByNoRek", targetNamespace = "http://BankService/", className = "bankservice.GetNasabahByNoRek")
    @ResponseWrapper(localName = "getNasabahByNoRekResponse", targetNamespace = "http://BankService/", className = "bankservice.GetNasabahByNoRekResponse")
    @Action(input = "http://BankService/NasabahService/getNasabahByNoRekRequest", output = "http://BankService/NasabahService/getNasabahByNoRekResponse")
    public Nasabah getNasabahByNoRek(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addVirtualAcc", targetNamespace = "http://BankService/", className = "bankservice.AddVirtualAcc")
    @ResponseWrapper(localName = "addVirtualAccResponse", targetNamespace = "http://BankService/", className = "bankservice.AddVirtualAccResponse")
    @Action(input = "http://BankService/NasabahService/addVirtualAccRequest", output = "http://BankService/NasabahService/addVirtualAccResponse")
    public void addVirtualAcc(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod(operationName = "TransferMoney")
    @RequestWrapper(localName = "TransferMoney", targetNamespace = "http://BankService/", className = "bankservice.TransferMoney")
    @ResponseWrapper(localName = "TransferMoneyResponse", targetNamespace = "http://BankService/", className = "bankservice.TransferMoneyResponse")
    @Action(input = "http://BankService/NasabahService/TransferMoneyRequest", output = "http://BankService/NasabahService/TransferMoneyResponse")
    public void transferMoney(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        long arg2);

}
